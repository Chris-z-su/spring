<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" " http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 配置mapper标签,namespace属性，作用：唯一的 标识一个Mapper配置文件，保护文件中的标签ID不被污染。注意值不能重复-->
<mapper namespace="com.shubao.mapper.UserMapper">

    <!--配置SQL资源：
     查询:select标签
        属性：
         id:唯一标识一个SQL语句参数
         resultType:声明使用哪个实体类存储查询的结果。一条结果一个实体类对象存储。
         parameterType:声明实参类型。
     增加:insert标签
     修改:update标签
     删除:delete标签
     注意：
        同一个文件内的标签ID不能重复。
    -->

    <!--  sql语句抽取  -->
    <sql id="selectUser">
        select * from sys_user
    </sql>


    <!--  查询操作  -->
    <select id="findAllForMybatis" resultType="user">
        select * from sys_user
    </select>

    <!--  插入操作  -->
    <insert id="insertForMybatis" parameterType="com.shubao.domain.User">
        <!--    #{实体属性名}：里面传入的是实体对象的属性名    -->
        insert into sys_user values(#{id}, #{username}, #{email}, #{password}, #{phoneNum})
    </insert>

    <!--  修改操作  -->
    <update id="updateForMybatis" parameterType="com.shubao.domain.User">
        update sys_user set email = #{email} where username = #{username}
    </update>

    <!--  删除操作  -->
    <delete id="deleteForMybatis" parameterType="java.lang.Integer">
        delete from sys_user where id = #{id}
    </delete>

    <!--  根据id查询  -->
    <select id="findOneForMybatis" resultType="user" parameterType="int">
        select * from sys_user where id = #{id}
    </select>

    <!--  多条件查询  -->
    <select id="findByCondition" parameterType="user" resultType="user">
        select * from sys_user
        <where>
            <if test="id != 0">
                and id = #{id}
            </if>
            <if test="username != null">
                and username = #{username}
            </if>
            <if test="password != null">
                and password = #{password}
            </if>
        </where>
    </select>

    <select id="findByIds" parameterType="list" resultType="user">
        <include refid="selectUser" />
        <where>
            <foreach collection="list" open="id in(" close=")" item="id" separator=",">
                #{id}
            </foreach>
        </where>
    </select>

    <insert id="save" parameterType="user">
        insert into sys_user values(#{id}, #{username}, #{email}, #{password}, #{phoneNum}, #{birthday})
    </insert>

    <select id="findByid" parameterType="int" resultType="user">
        <include refid="selectUser" />
        <where>
            <if test="id != 0">
                and id = #{id}
            </if>
        </where>
    </select>

    <resultMap id="userMap" type="user">
        <id column="uid" property="id" />
        <result column="username" property="username" />
        <result column="email" property="email" />
        <result column="password" property="password" />
        <result column="phoneNum" property="phoneNum" />
        <result column="birthday" property="birthday" />

        <!--
            配置集合信息
                property: 集合名称
                ofType: 当前集合中的数据类型
         -->
        <collection property="orderList" ofType="order">
            <!-- 封装order的数据 -->
            <id column="oid" property="id" />
            <result column="ordertime" property="ordertime" />
            <result column="total" property="total" />
        </collection>

    </resultMap>

    <select id="findAll" resultMap="userMap">
        select *, o.id oid from sys_user u, sys_order o where u.id = o.uid
    </select>

    <resultMap id="userRoleMap" type="user">
        <!-- user的信息 -->
        <id column="uid" property="id" />
        <result column="username" property="username" />
        <result column="email" property="email" />
        <result column="password" property="password" />
        <result column="phoneNum" property="phoneNum" />
        <result column="birthday" property="birthday" />

        <!-- user内部的roleList的信息 -->
        <collection property="roles" ofType="role">
            <id column="roleId" property="id" />
            <result column="roleName" property="roleName" />
            <result column="roleDesc" property="roleDesc" />
        </collection>

    </resultMap>

    <select id="findUserAndRole" resultMap="userRoleMap">
        select * from sys_user u, sys_user_role ur, sys_role r where u.id = ur.userId and ur.roleId = r.id
    </select>

</mapper>